name: Kyobo → Notion (every 5 min)

on:
  schedule:
    - cron: "*/5 * * * *"   # GitHub Actions practical minimum interval
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: kyobo-notion
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  run:
    # ← 여기! Environment 이름을 너가 만든 것으로 바꿔줘 (예: production, staging 등)
    environment: production

    # 필요하면 포크 방지용 오너 체크도 가능
    # if: github.repository_owner == 'YOUR_GH_USERNAME'

    runs-on: ubuntu-latest
    timeout-minutes: 12

    env:
      # --- REQUIRED SECRETS (Environment에 넣은 값 사용됨) ---
      NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
      # 너의 시크릿명이 DATABASE_ID라면 아래 그대로,
      # BOOKS_DB_ID로 만들었다면 위 줄은 유지하고 아래 줄을 이렇게 바꿔도 됨:
      # DATABASE_ID: ${{ secrets.BOOKS_DB_ID }}
      DATABASE_ID: ${{ secrets.DATABASE_ID }}

      # --- OPTIONAL: Notion property names (네 DB에 맞게 수정 가능) ---
      TITLE_PROP: "책 제목"
      AUTHOR_PROP: "저자"
      PUBLISHER_PROP: "출판사"
      PAGES_PROP: "페이지"
      GENRE_PROP: "장르"
      STATUS_PROP: "상태"
      KY_URL_PROP: "교보 URL"
      REQUEST_PROP: "수집요청"
      READ_PAGES_PROP: "읽은 페이지"
      # KY_URL_PROP_TYPE: "rich_text"  # 교보 URL이 리치텍스트일 때만 사용
      # PAGE_SIZE: "50"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install
